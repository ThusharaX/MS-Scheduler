import Head from "next/head";
import { useEffect, useState } from "react";
import { Header, MeetingCard, MeetingDetails, Popup } from "../components";
import { useDispatch, useSelector } from "react-redux";
import { getMeetingsStore } from "../store/meetings";
import Image from "next/image";
import moment from "moment";

export default function Home() {
  const { meetings } = useSelector((state) => state.meetings);
  const [tab, setTab] = useState("COMING_UP");
  const [selectedMeeting, setSelectedMeeting] = useState([]);
  const [isOpen, setIsOpen] = useState(false);
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(getMeetingsStore());
  }, [dispatch]);

  useEffect(() => {
    setSelectedMeeting(
      meetings.filter((meeting) =>
        moment(new Date()).isBefore(meeting.endDateTime),
      ),
    );
  }, [meetings]);

  const handleClick = () => {
    setIsOpen(!isOpen);
  };

  const comingUp = () => {
    if (tab !== "COMING_UP") {
      setTab("COMING_UP");
      setSelectedMeeting(
        meetings.filter((meeting) =>
          moment(new Date()).isBefore(meeting.endDateTime),
        ),
      );
    }
  };

  const wrapped = () => {
    if (tab !== "WRAPPED") {
      setTab("WRAPPED");
      setSelectedMeeting(
        meetings.filter((meeting) =>
          moment(new Date()).isAfter(meeting.endDateTime),
        ),
      );
    }
  };

  return (
    <>
      <div>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
      </div>
      <div className="min-h-screen flex flex-col">
        <Header />
        <div className="w-full">
          <div className="max-w-6xl mx-auto flex px-8 mt-5 mb-3 sm:px-16">
            <button
              onClick={comingUp}
              className={
                (tab === "COMING_UP"
                  ? "bg-purple-700 text-white"
                  : "bg-slate-100 text-gray-600") + " px-2 py-1 rounded mr-3"
              }>
              COMING UP
            </button>
            <button
              onClick={wrapped}
              className={
                (tab === "WRAPPED"
                  ? "bg-purple-700 text-white"
                  : "bg-slate-100 text-gray-600") + " px-2 py-1 rounded mr-3"
              }>
              WRAPPED
            </button>
          </div>
          <div className="max-w-6xl mx-auto px-8 mb-16 sm:px-16">
            <div className="w-full grid sm:grid-cols-2 lg:grid-cols-3 gap-4 flex-wrap">
              {selectedMeeting.map((meeting, key) => (
                <MeetingCard key={key} data={meeting} />
              ))}
            </div>
          </div>
          <div className="max-w-6xl mx-auto px-8 sm:px-16 fixed w-full bottom-8 right-1/2 translate-x-1/2 flex justify-end">
            <button
              onClick={handleClick}
              className="flex flex-row gap-2 bg-purple-700 py-3 pl-4 pr-5 rounded-lg items-center hover:bg-blue-700">
              <Image src="/icons/add-icon.svg" width={30} height={30} />
              <span className="font-semibold text-lg text-white">New</span>
            </button>
          </div>
        </div>
      </div>
      {isOpen && (
        <div className="w-full h-full fixed overflow-y-auto z-10 top-0 bg-white/50 backdrop-blur-[50px] flex flex-col justify-center items-center">
          <Popup close={handleClick} />
        </div>
      )}
    </>
  );
}
